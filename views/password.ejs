<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Secure Password Reset</title>
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary: #4361ee;
      --secondary: #3f37c9;
      --success: #4cc9f0;
      --danger: #f72585;
      --light: #f8f9fa;
      --dark: #212529;
      --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    
    body {
      min-height: 100vh;
      background: linear-gradient(135deg, #1a2a6c, #b21f1f, #1a2a6c);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      color: var(--light);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
    }
    
    .card-container {
      width: 100%;
      max-width: 500px;
      animation: fadeIn 0.8s ease-out;
    }
    
    .card {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(12px);
      border: 1px solid rgba(255, 255, 255, 0.18);
      border-radius: 20px;
      overflow: hidden;
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }
    
    .card-header {
      background: rgba(67, 97, 238, 0.2);
      padding: 25px 30px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .card-body {
      padding: 30px;
    }
    
    .card-title {
      font-weight: 700;
      font-size: 1.8rem;
      margin-bottom: 0;
      color: white;
      text-align: center;
    }
    
    .form-label {
      font-weight: 500;
      color: rgba(255, 255, 255, 0.9);
      margin-bottom: 8px;
    }
    
    .form-control {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 12px;
      color: white;
      padding: 12px 20px;
      transition: var(--transition);
    }
    
    .form-control:focus {
      background: rgba(255, 255, 255, 0.15);
      border-color: rgba(255, 255, 255, 0.4);
      box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
      color: white;
    }
    
    .password-container {
      position: relative;
    }
    
    .password-toggle {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: rgba(255, 255, 255, 0.6);
      transition: var(--transition);
    }
    
    .password-toggle:hover {
      color: white;
    }
    
    .btn-primary {
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      border: none;
      border-radius: 12px;
      padding: 12px 24px;
      font-weight: 600;
      letter-spacing: 0.5px;
      width: 100%;
      transition: var(--transition);
      box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
    }
    
    .btn-primary:hover {
      transform: translateY(-3px);
      box-shadow: 0 7px 20px rgba(67, 97, 238, 0.4);
    }
    
    .success-container {
      text-align: center;
      padding: 40px 30px;
    }
    
    .success-icon {
      font-size: 5rem;
      color: var(--success);
      margin-bottom: 25px;
      animation: bounce 1.5s infinite;
    }
    
    .success-message {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 30px;
      line-height: 1.4;
    }
    
    .password-strength {
      height: 5px;
      border-radius: 5px;
      margin-top: 8px;
      background: rgba(255, 255, 255, 0.1);
      overflow: hidden;
    }
    
    .strength-meter {
      height: 100%;
      width: 0;
      transition: var(--transition);
    }
    
    .strength-text {
      font-size: 0.85rem;
      margin-top: 5px;
      text-align: right;
      opacity: 0.8;
    }
    
    .alert {
      border-radius: 12px;
      padding: 15px 20px;
      margin-bottom: 25px;
      border: none;
      display: flex;
      align-items: center;
    }
    
    .alert-danger {
      background: rgba(247, 37, 133, 0.2);
      color: #ff9ec0;
      border-left: 4px solid var(--danger);
      animation: fadeIn 0.6s forwards;
    }
    
    .alert-success {
      background: rgba(76, 201, 240, 0.2);
      color: #a6e8ff;
      border-left: 4px solid var(--success);
      animation: fadeIn 0.6s forwards;
    }
    
    .alert i {
      margin-right: 12px;
      font-size: 1.4rem;
    }
    
    .logo {
      text-align: center;
      margin-bottom: 15px;
    }
    
    .logo i {
      font-size: 2.5rem;
      color: white;
      background: rgba(255, 255, 255, 0.1);
      width: 70px;
      height: 70px;
      line-height: 70px;
      border-radius: 50%;
      margin-bottom: 15px;
    }
    
    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
      40% {transform: translateY(-20px);}
      60% {transform: translateY(-10px);}
    }
    
    @media (max-width: 576px) {
      .card-header {
        padding: 20px;
      }
      
      .card-body {
        padding: 25px 20px;
      }
      
      .card-title {
        font-size: 1.5rem;
      }
      
      .success-icon {
        font-size: 4rem;
      }
      
      .success-message {
        font-size: 1.3rem;
      }
    }
  </style>
</head>
<body>
  <div class="card-container">
  <div class="card">
    

    <%  if (successMessage) { %>
      <!-- Success State -->
      <div class="success-container">
        <div class="logo">
          <i class="fas fa-check-circle"></i>
        </div>
        <h2 class="card-title">Password Updated!</h2>
        <div class="success-icon">
          <i class="fas fa-lock"></i>
        </div>
        <p class="success-message">Your password is now updated. You can log in with your new password.</p>
        <!-- <a href="/login" class="btn btn-primary">
          <i class="fas fa-sign-in-alt me-2"></i>Back to Login
        </a> -->
      </div>
    <% } else { %>
      <!-- Form State -->
      <div class="card-header">
        <div class="logo">
          <i class="fas fa-lock"></i>
        </div>
        <h1 class="card-title">Reset Your Password</h1>
      </div>

      <div class="card-body">
        <!-- Error Message -->
    <% if (errorMessage) { %>
      <div class="alert alert-danger">
        <i class="fas fa-exclamation-circle"></i>
        <div><%= errorMessage %></div>
      </div>
    <% } %>
        <form method="POST" action="/api/v1/auth/reset-password" id="passwordForm">
          <!-- Hidden inputs -->
          <input type="hidden" name="userId" value="<%= userId %>">
          <input type="hidden" name="token" value="<%= token %>">

          <!-- New Password -->
          <div class="mb-4">
            <label for="newPassword" class="form-label">New Password</label>
            <div class="password-container">
              <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" required minlength="8">
              <span class="password-toggle" onclick="togglePassword('newPassword')">
                <i class="fas fa-eye"></i>
              </span>
            </div>
            <div class="password-strength mt-2">
              <div id="strengthMeter" class="strength-meter"></div>
            </div>
            <div id="strengthText" class="strength-text">Password strength</div>
          </div>

          <!-- Confirm Password -->
          <div class="mb-4">
            <label for="confirmPassword" class="form-label">Confirm New Password</label>
            <div class="password-container">
              <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" required minlength="8">
              <span class="password-toggle" onclick="togglePassword('confirmPassword')">
                <i class="fas fa-eye"></i>
              </span>
            </div>
            <div id="passwordMatch" class="strength-text"></div>
          </div>

          <!-- Submit Button -->
          <button type="submit" class="btn btn-primary mt-3">
            <i class="fas fa-sync-alt me-2"></i>Update Password
          </button>
        </form>
      </div>
    <% } %>
  </div>
</div>

  
  <script>
    // Toggle password visibility
    function togglePassword(fieldId) {
      const field = document.getElementById(fieldId);
      const toggleIcon = field.nextElementSibling.querySelector('i');
      
      if (field.type === 'password') {
        field.type = 'text';
        toggleIcon.classList.remove('fa-eye');
        toggleIcon.classList.add('fa-eye-slash');
      } else {
        field.type = 'password';
        toggleIcon.classList.remove('fa-eye-slash');
        toggleIcon.classList.add('fa-eye');
      }
    }
    
    // Check password strength
    function checkPasswordStrength() {
      const password = document.getElementById('newPassword').value;
      const strengthMeter = document.getElementById('strengthMeter');
      const strengthText = document.getElementById('strengthText');
      let strength = 0;
      let color = '';
      
      // Check password length
      if (password.length >= 8) strength += 25;
      if (password.length >= 12) strength += 15;
      
      // Check for uppercase letters
      if (/[A-Z]/.test(password)) strength += 20;
      
      // Check for lowercase letters
      if (/[a-z]/.test(password)) strength += 10;
      
      // Check for numbers
      if (/\d/.test(password)) strength += 15;
      
      // Check for special characters
      if (/[^A-Za-z0-9]/.test(password)) strength += 15;
      
      // Update strength meter
      strengthMeter.style.width = strength + '%';
      
      // Set color and text based on strength
      if (strength < 40) {
        color = '#f72585'; // Weak
        strengthText.textContent = 'Weak password';
      } else if (strength < 70) {
        color = '#f77f00'; // Medium
        strengthText.textContent = 'Medium password';
      } else {
        color = '#4cc9f0'; // Strong
        strengthText.textContent = 'Strong password';
      }
      
      strengthMeter.style.background = color;
      strengthText.style.color = color;
    }
    
    // Check password match
    document.getElementById('confirmPassword')?.addEventListener('input', function() {
      const password = document.getElementById('newPassword').value;
      const confirmPassword = this.value;
      const matchText = document.getElementById('passwordMatch');
      
      if (confirmPassword === '') {
        matchText.textContent = '';
      } else if (password === confirmPassword) {
        matchText.textContent = 'Passwords match';
        matchText.style.color = '#4cc9f0';
      } else {
        matchText.textContent = 'Passwords do not match';
        matchText.style.color = '#f72585';
      }
    });
    
    // Initialize password strength check
    document.getElementById('newPassword')?.addEventListener('input', checkPasswordStrength);
  </script>
</body>
</html>