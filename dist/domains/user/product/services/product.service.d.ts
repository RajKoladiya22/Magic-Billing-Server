export declare const createProduct: (input: any) => Promise<{
    type: import(".prisma/client").$Enums.ProductType;
    default: boolean;
    name: string;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    isActive: boolean;
    userId: string;
    hsnCode: string | null;
    sellingPrice: import("@prisma/client/runtime/library").JsonValue | null;
    purchasePrice: import("@prisma/client/runtime/library").JsonValue | null;
    taxRate: number | null;
    sacCode: string | null;
    barcode: string | null;
    isTaxable: boolean;
    onlinestore: boolean;
    notForSale: boolean;
    images: import("@prisma/client/runtime/library").JsonValue | null;
    categoryId: string | null;
    unitId: string | null;
}>;
export declare const findProductData: (input: any) => Promise<{
    type: import(".prisma/client").$Enums.ProductType;
    default: boolean;
    name: string;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    isActive: boolean;
    userId: string;
    hsnCode: string | null;
    sellingPrice: import("@prisma/client/runtime/library").JsonValue | null;
    purchasePrice: import("@prisma/client/runtime/library").JsonValue | null;
    taxRate: number | null;
    sacCode: string | null;
    barcode: string | null;
    isTaxable: boolean;
    onlinestore: boolean;
    notForSale: boolean;
    images: import("@prisma/client/runtime/library").JsonValue | null;
    categoryId: string | null;
    unitId: string | null;
}[]>;
export declare const findProductImage: (input: any) => Promise<{
    type: import(".prisma/client").$Enums.ProductType;
    default: boolean;
    name: string;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    isActive: boolean;
    userId: string;
    hsnCode: string | null;
    sellingPrice: import("@prisma/client/runtime/library").JsonValue | null;
    purchasePrice: import("@prisma/client/runtime/library").JsonValue | null;
    taxRate: number | null;
    sacCode: string | null;
    barcode: string | null;
    isTaxable: boolean;
    onlinestore: boolean;
    notForSale: boolean;
    images: import("@prisma/client/runtime/library").JsonValue | null;
    categoryId: string | null;
    unitId: string | null;
} | null>;
export declare const updateProductImage: (input: any) => Promise<{
    type: import(".prisma/client").$Enums.ProductType;
    default: boolean;
    name: string;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    isActive: boolean;
    userId: string;
    hsnCode: string | null;
    sellingPrice: import("@prisma/client/runtime/library").JsonValue | null;
    purchasePrice: import("@prisma/client/runtime/library").JsonValue | null;
    taxRate: number | null;
    sacCode: string | null;
    barcode: string | null;
    isTaxable: boolean;
    onlinestore: boolean;
    notForSale: boolean;
    images: import("@prisma/client/runtime/library").JsonValue | null;
    categoryId: string | null;
    unitId: string | null;
} | null>;
export declare const deleteProductImage: (input: any) => Promise<{
    type: import(".prisma/client").$Enums.ProductType;
    default: boolean;
    name: string;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    isActive: boolean;
    userId: string;
    hsnCode: string | null;
    sellingPrice: import("@prisma/client/runtime/library").JsonValue | null;
    purchasePrice: import("@prisma/client/runtime/library").JsonValue | null;
    taxRate: number | null;
    sacCode: string | null;
    barcode: string | null;
    isTaxable: boolean;
    onlinestore: boolean;
    notForSale: boolean;
    images: import("@prisma/client/runtime/library").JsonValue | null;
    categoryId: string | null;
    unitId: string | null;
}>;
